[{"D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\App.js":"1","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Signup.js":"2","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\UserProfile.js":"3","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\reducers\\userReducer.js":"4","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\SubscribeUserPost.js":"5","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Signin.js":"6","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Navbar.js":"7","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\index.js":"8","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Profile.js":"9","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Home.js":"10","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\CreatePost.js":"11","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\PostImg.js":"12"},{"size":1886,"mtime":1606904449327,"results":"13","hashOfConfig":"14"},{"size":4288,"mtime":1606987558844,"results":"15","hashOfConfig":"14"},{"size":4838,"mtime":1606815298452,"results":"16","hashOfConfig":"14"},{"size":674,"mtime":1606813984308,"results":"17","hashOfConfig":"14"},{"size":6063,"mtime":1606719317702,"results":"18","hashOfConfig":"14"},{"size":2962,"mtime":1606987546583,"results":"19","hashOfConfig":"14"},{"size":2598,"mtime":1606971878286,"results":"20","hashOfConfig":"14"},{"size":198,"mtime":1606113908982,"results":"21","hashOfConfig":"14"},{"size":6068,"mtime":1606982542772,"results":"22","hashOfConfig":"14"},{"size":6140,"mtime":1607069100502,"results":"23","hashOfConfig":"14"},{"size":3904,"mtime":1607068711979,"results":"24","hashOfConfig":"14"},{"size":887,"mtime":1606915318193,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"uqrsnh",{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},"D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\App.js",["64","65"],"import React,{ useEffect, createContext, useReducer,useContext } from 'react'\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Signin from './components/Signin'\nimport Signup from './components/Signup'\nimport Profile from './components/Profile'\nimport UserProfile from './components/UserProfile'\nimport CreatePost from './components/CreatePost'\nimport SubscribedUserPosts from './components/SubscribeUserPost'\nimport { reducer, initialState } from './reducers/userReducer'\nimport PostImg from './components/PostImg'\n\n\nexport const UserContext = createContext()\n\n\nconst Routing = () =>{\n  const history = useHistory()\n  const { state, dispatch } = useContext(UserContext)\n  useEffect(() =>{\n    const user = JSON.parse(localStorage.getItem('user'))\n    // console.log(user)\n    dispatch({type:\"USER\",payload:user})\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n    }else{\n      history.push('/signin')\n    }\n  },[])\n  \n  return(\n    <Switch>\n    <Route exact path=\"/\" component={Home} ></Route>\n    <Route exact path=\"/signin\" component={Signin} ></Route>\n    <Route exact path=\"/signup\" component={Signup} ></Route>\n    <Route exact path=\"/profile\" component={Profile} ></Route>\n    <Route exact path=\"/createpost\" component={CreatePost} ></Route>\n    <Route path=\"/profile/:userid\" component={UserProfile} ></Route>\n    <Route path=\"/explore\" component={SubscribedUserPosts} ></Route>\n    <Route path=\"/post\" component={PostImg} ></Route>\n  </Switch>\n  )\n}\n\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n      <UserContext.Provider value={{state,dispatch}}>\n        <Router>\n          <Navbar />\n          <Routing />\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n",["66","67"],"D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Signup.js",["68","69","70","71","72","73","74"],"import React,{useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './Signup.css'\r\nimport M from 'materialize-css'\r\nimport Logo from '../images/logo.png'\r\n\r\nconst Signup = () =>{\r\n\r\n  let history = useHistory()\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [image, setImage] = useState(\"\")\r\n  const [background, setBackground] = useState(\"\")\r\n  const [url, setUrl] = useState(undefined)\r\n\r\n  useEffect(() =>{\r\n      if(url){\r\n        uploadFields()\r\n      }\r\n  },[url])\r\n\r\n\r\n  const uploadCoverPhoto = () =>{\r\n    const data = new FormData()\r\n    data.append('file',background)\r\n    data.append('upload_preset','pixelphant_social_media')\r\n    data.append('cloud_name','grow-more')\r\n    fetch('https://api.cloudinary.com/v1_1/grow-more/image/upload',{\r\n        method:'post',\r\n        body:data\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n       setUrl(data.url)\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n    })\r\n  }\r\n\r\n  const uploadProfile = () =>{\r\n    const data = new FormData()\r\n    data.append('file',image)\r\n    data.append('upload_preset','pixelphant_social_media')\r\n    data.append('cloud_name','grow-more')\r\n    fetch('https://api.cloudinary.com/v1_1/grow-more/image/upload',{\r\n        method:'post',\r\n        body:data\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n       setUrl(data.url)\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n    })\r\n  }\r\n  const uploadFields = () =>{\r\n    if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n      M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n      return\r\n  }\r\n    fetch('/signup',{\r\n      method:'post',\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      \r\n      body:JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n        pic:url,\r\n        cover:url\r\n      })\r\n    }).then(res=>res.json())\r\n    \r\n    .then(data=>{\r\n     if(data.error){\r\n        M.toast({ html: data.error, classes:'#c62828 red darken-3 ' })\r\n     }else{\r\n       M.toast({ html: data.message, classes: '#43a047 green darken-3' })\r\n       history.push('/signin')\r\n     }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  const PostData = () =>{\r\n    if(image,background){\r\n      uploadProfile()\r\n      uploadCoverPhoto()\r\n    }else{\r\n      uploadFields()\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"signup_section\">\r\n      <div className=\"signup_wrapper\">\r\n        <div className=\"signup_container_block\">\r\n            <div className=\"left_menu\">\r\n            <div className=\"signup_header\">\r\n            <div className=\"logo\">\r\n                <img src={Logo} />\r\n            </div><br /> <br />  <br />\r\n              <h4>SignUp </h4>\r\n              <p>Signup to continue with our application</p>\r\n            </div>\r\n            <input type=\"text\"  value={name} placeholder=\"Enter your name\" onChange={(e) => setName(e.target.value)}  />\r\n            <input type=\"email\"  value={email} placeholder=\"Enter your email address\" onChange={(e) => setEmail(e.target.value)} />\r\n            <input type=\"password\" name=\"password\" value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}  />\r\n            {/* <input type=\"file\" id=\"file\"  onChange={(e)=>setImage(e.target.files[0])} />\r\n              <label for=\"file\">Photo</label>\r\n            <input type=\"file\" id=\"file\" onChange={(e)=>setBackground(e.target.files[0])} />\r\n              <label for=\"file\">Background</label> */}\r\n            <button className=\"signup_btn\" onClick={()=> PostData()}>Signup</button>\r\n            <div className=\"switch_link\">\r\n              <span>Already have a account<Link className=\"signup_link\" to=\"/signin\">Signin</Link></span>\r\n            </div>\r\n            </div>\r\n            <div className=\"right_menu\">\r\n              <div className=\"banner_block\">\r\n                <div className=\"overlay\"></div>\r\n                <h6>Welcome to pixelphant</h6>\r\n              </div>\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\UserProfile.js",["75","76","77","78"],"import React,{ useState, useEffect,useContext } from 'react'\r\nimport { UserContext } from '../App'\r\nimport { useParams } from 'react-router-dom'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Profile = () => {\r\n   \r\n    const [userProfile,setProfile] = useState(null)\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const { userid } = useParams()\r\n    console.log(userid)\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    // const [showfollow,setShowFollow] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setProfile(result)\r\n        })\r\n     },[])   \r\n\r\n     const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n             setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:newFollower\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(true)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { userProfile ?\r\n         <div className=\"profile_section\">\r\n          <div className=\"profile_wrapper\">\r\n              <div className=\"user_profile_container\">\r\n              <div className=\"background_img\">\r\n                 <img src={userProfile.user.cover} />\r\n                 <div className=\"user_profile_img\">\r\n                      <img src={userProfile.user.pic} />\r\n                  </div>\r\n                  <div className=\"user_profile_info\">\r\n                      <div className=\"name\">\r\n                          <h6>{userProfile.user.name}</h6>\r\n                          <h6>{userProfile.user.email}</h6>\r\n                      </div>\r\n                      <div className=\"user_connection\">\r\n                          <span><small className=\"count\">{userProfile.posts.length}</small>Posts</span>\r\n                          <span><small className=\"count\">{userProfile.user.followers.length}</small>Followers</span>\r\n                          <span><small className=\"count\">{userProfile.user.following.length}</small>Following</span>\r\n                         { showfollow ? <button onClick={() => followUser()}>follow</button> : <button onClick={() => unfollowUser()}>Unfollow</button>  } \r\n                      </div>\r\n\r\n                  </div>\r\n              </div>\r\n                  \r\n              </div>\r\n              <div className=\"user_gallery\">\r\n              <div className=\"user_header\">\r\n                  <h4>Posts</h4>\r\n              </div>\r\n                    {\r\n                        userProfile.posts.map(item=>{\r\n                                return(\r\n                                    <img key={item._id} src={item.photo} alt={item.title} />\r\n                                )\r\n                            })\r\n                        }\r\n                  </div>\r\n          </div>\r\n      </div>  \r\n        :  <CircularProgress className=\"loading_icon\" /> }\r\n\r\n     \r\n      </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n",["79","80"],"D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\reducers\\userReducer.js",["81","82","83","84","85"],"export const initialState = null\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return{\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    if(action.type==\"UPDATECOVER\"){\r\n        return{\r\n            ...state,\r\n            cover:action.payload\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n   ","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\SubscribeUserPost.js",["86","87","88","89","90"],"import React,{ useState, useEffect,useContext } from 'react'\r\nimport { UserContext } from '../App'\r\nimport './Home.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { AiOutlineLike, AiTwotoneLike, AiOutlineDelete } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    \r\n      const [ data, setData ] = useState([])\r\n      const {state,dispatch} = useContext(UserContext)\r\n      useEffect(()=>{\r\n          fetch('/getsubpost',{\r\n              headers:{\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n              }\r\n          }).then(res=> res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n            setData(result.posts)\r\n          })\r\n      },[])\r\n\r\n      const likePost = (id) =>{\r\n          fetch('/like',{\r\n              method:'put',\r\n              headers:{\r\n                  'Content-Type':'application/json',\r\n                  \"Authorization\":'Bearer '+localStorage.getItem('jwt')\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=> res.json())\r\n          .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n      }\r\n      const dislikePost = (id) =>{\r\n        fetch('/dislike',{\r\n            method:'put',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                \"Authorization\":'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=> res.json())\r\n        .then(result=>{\r\n          const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n          })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n           })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n  }\r\n\r\n  const deletePost = (postid)=>{\r\n    fetch(`/deletepost/${postid}`,{\r\n        method:\"delete\",\r\n        headers:{\r\n            Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newData = data.filter(item=>{\r\n            return item._id !== result._id\r\n        })\r\n        setData(newData)\r\n    })\r\n}\r\n\r\n    return (\r\n        <div className=\"home_section\">\r\n            <div className=\"home_wrapper\">\r\n                {\r\n                    data.map(item=>{\r\n                        return(\r\n                            <div className=\"card_wrapper\">\r\n                            <div className=\"card_header_info\"  key={item._id}>\r\n                                <h4><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  } >{item.postedBy.name}</Link><AiOutlineDelete onClick={()=>deletePost(item._id)} style={{float: 'right' }} /></h4>\r\n                            </div>\r\n                            <div className=\"card_body\">\r\n                                <img src={item.photo} />\r\n                                    <div className=\"post_btns_info\">\r\n                                        {item.likes.includes(state._id)\r\n                                        ?\r\n                                        <Button variant=\"contained\" color=\"default\" className=\"like_btn\" ><AiTwotoneLike className=\"dislike_icon\"  onClick={() => {dislikePost(item._id)}} /></Button>\r\n                                        : <Button variant=\"contained\" color=\"default\" className=\"like_btn\"><AiOutlineLike  className=\"like_icon\" onClick={() => {likePost(item._id)}} /></Button> }\r\n                                    </div>\r\n                                <p >{item.likes.length} Likes</p>\r\n                                <div className=\"post_text_info\">\r\n                                    <h6>{item.title}</h6>\r\n                                    <p>{item.body}</p>\r\n                                    {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <p className=\"comments\" key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</p>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"Write a comment here.....\" />  \r\n                                </form>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                       \r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Signin.js",["91","92","93","94"],"import React,{useState, useContext} from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { UserContext } from '../App'\r\nimport './Signin.css'\r\nimport M from 'materialize-css'\r\nimport Logo from '../images/logo.png'\r\n\r\nconst Signin = () =>{\r\nconst {state,dispatch} = useContext(UserContext)\r\n  let history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  const PostData = ()=>{\r\n    if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n        M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n        return\r\n    }\r\n    fetch(\"/signin\",{\r\n        method:\"post\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            password,\r\n            email\r\n        })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n        // console.log(data)\r\n       if(data.error){\r\n          M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n          // console.log(data.error)\r\n       }\r\n       else{\r\n           localStorage.setItem(\"jwt\",data.token)\r\n           localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n           dispatch({type:\"USER\",payload:data.user})\r\n          //  console.log(data)\r\n           M.toast({html:\"signin success\",classes:\"#43a047 green darken-1\"})\r\n           history.push('/')\r\n       }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n  return(\r\n    <div className=\"signin_section\">\r\n      <div className=\"signin_wrapper\">\r\n        <div className=\"signin_container_block\">\r\n        <div className=\"right_menu\">\r\n              <div className=\"banner_block\">\r\n                <div className=\"overlay\"></div>\r\n                <h6>Welcome to pixelphant</h6>\r\n              </div>\r\n            </div>\r\n            <div className=\"left_menu\">\r\n            <div className=\"signin_header\">\r\n            <div className=\"logo\">\r\n                <img src={Logo} />\r\n            </div><br /> <br />  <br />\r\n              <h4>Sign in </h4>\r\n              <p>Sign in to continue our application</p>\r\n            </div>\r\n            <input type=\"email\"  value={email} placeholder=\"Enter your email address\" onChange={(e) => setEmail(e.target.value)} />\r\n            <input type=\"password\"  value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}  />\r\n            <button className=\"signin_btn\" onClick={()=> PostData()}>Signin</button>\r\n            <div className=\"switch_link\">\r\n              <Link className=\"fogot_password\" to=\"/forgot-password\">Forget Password?</Link>\r\n              <span>Don't have a account<Link className=\"signup_link\" to=\"/signup\">Signup</Link></span>\r\n             \r\n            </div>\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signin\r\n","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Navbar.js",["95"],"import React,{ useState, useEffect, useContext} from 'react'\r\nimport Logo from '../images/logo.png'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../components/Navbar.css'\r\nimport { UserContext } from '../App'\r\n\r\nconst Navbar = () =>{\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const renderList = () =>{\r\n        if(state){\r\n            return[\r\n                <li key=\"1\" className=\"list_items\"><Link className=\"navbar_links\" to=\"/profile\" onClick={closeMobileMenu}>Profile</Link></li>,\r\n                <li key=\"6\" className=\"list_items\"><Link className=\"navbar_links\" to=\"/explore\" onClick={closeMobileMenu}>My Following Post</Link></li>,\r\n                <li key=\"5\" className=\"list_items\"><button className=\"logout_btn\" onClick={()=> {\r\n                        localStorage.clear()\r\n                        dispatch({type:'CLEAR'})\r\n                        history.push('/signin')\r\n                }}>Logout</button></li>\r\n            ]\r\n        }else{\r\n             return[\r\n                <li key=\"3\" className=\"list_items\"><Link className=\"navbar_links\" to=\"/signin\" onClick={closeMobileMenu}>Signin</Link></li>,\r\n                <li key=\"4\" className=\"list_items\"><Link className=\"navbar_links\" to=\"/signup\" onClick={closeMobileMenu}>Signup</Link></li>\r\n            ]\r\n        }\r\n    }\r\n\r\n    const [ click, setClick] = useState(false)\r\n    const [ button, setButton ] = useState(true)\r\n    \r\n    const handleClick = () => setClick(!click)\r\n    const closeMobileMenu = () => setClick(false)\r\n    const showButton = () =>{\r\n        if( window.innerWidth <= 960) {\r\n          setButton(false)\r\n        }else{\r\n            setButton(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n        window.addEventListener('resize', showButton);\r\n      }, []);\r\n\r\n    return(\r\n        <div className=\"navbar_section\">\r\n            <div className=\"navbar_wrapper\">\r\n                <Link className=\"navbar_logo\" src={Logo} to={state?'/': '/signin'} onClick={closeMobileMenu} >\r\n                    <img src={Logo} />\r\n                </Link>\r\n                <div className=\"menu_icon\" onClick={handleClick}>\r\n                    {click ? <CloseIcon /> : <MenuIcon />}\r\n                </div>\r\n                <ul className={ click ? 'navbar_menu active' : 'navbar_menu' }>\r\n                        {renderList()}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\index.js",[],["96","97"],"D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Profile.js",["98","99","100","101","102","103","104"],"import React,{ useState, useEffect,useContext } from 'react'\r\nimport './Profile.css'\r\nimport { UserContext } from '../App'\r\nimport Button from '@material-ui/core/Button';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CreatePost from './CreatePost'\r\n\r\n\r\nconst Profile = () => {\r\n \r\n    const [ mypics, setPics ] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const [image, setImage] = useState(\"\")\r\n    const [background, setBackground] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    useEffect(() =>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result=>{\r\n             console.log(result)\r\n            setPics(result.mypost)\r\n        })\r\n    },[])    \r\n\r\n    useEffect(() =>{\r\n        if(background){\r\n            const data = new FormData()\r\n            data.append('file',background)\r\n            data.append('upload_preset','pixelphant_social_media')\r\n            data.append('cloud_name','grow-more')\r\n            fetch('https://api.cloudinary.com/v1_1/grow-more/image/upload',{\r\n                method:'post',\r\n                body:data\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                fetch('/updatecover',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        cover:data.url\r\n                    })\r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    console.log(result)\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state,cover:result.cover}))\r\n                    dispatch({type:\"UPDATECOVER\",payload:result.cover})\r\n                 //    window.location.reload()\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },[background])\r\n\r\n    useEffect(() =>{\r\n        if(image){\r\n            const data = new FormData()\r\n            data.append('file',image)\r\n            data.append('upload_preset','pixelphant_social_media')\r\n            data.append('cloud_name','grow-more')\r\n            fetch('https://api.cloudinary.com/v1_1/grow-more/image/upload',{\r\n                method:'post',\r\n                body:data\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n               fetch('/updatepic',{\r\n                   method:\"put\",\r\n                   headers:{\r\n                       \"Content-Type\":\"application/json\",\r\n                       \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                   },\r\n                   body:JSON.stringify({\r\n                       pic:data.url\r\n                   })\r\n               }).then(res=>res.json())\r\n               .then(result=>{\r\n                   console.log(result)\r\n                   localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n                   dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n                //    window.location.reload()\r\n               })\r\n           \r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n           }\r\n        },[image])\r\n        const updatePhoto = (file)=>{\r\n            setImage(file)\r\n        }\r\n        const uploadCoverImg = (file) =>{\r\n            setBackground(file)\r\n        }\r\n\r\n    return (\r\n      <div className=\"profile_section\">\r\n          <div className=\"profile_wrapper\">\r\n              <div className=\"user_profile_container\">\r\n              <div className=\"cover_img\">\r\n                <img src={state?state.cover:\"loading\"} />\r\n                <div className=\"change_cover\">\r\n                    <input type=\"file\" id=\"cover\" onChange={(e)=>uploadCoverImg(e.target.files[0])} />\r\n                    <label for=\"cover\" className=\"cover_img_btn\">\r\n                        <PhotoCamera /> Add Cover Photo\r\n                    </label>\r\n                </div>\r\n                <div className=\"user_profile_info\">\r\n                    <div className=\"user_profile_img\">\r\n                        <img src={state?state.pic:\"loading\"} />\r\n                        <div className=\"change_profile\">\r\n                            <input type=\"file\" id=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n                            <label for=\"file\"><PhotoCamera /> </label>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"name\">\r\n                            <h6>{state?state.name:'loading'}</h6>\r\n                        </div>\r\n                        <div className=\"user_connection\">\r\n                            <span><small className=\"count\">{mypics.length}</small>Posts</span>\r\n                            <span><small className=\"count\">{state?state.followers.length:\"0\"}</small>Followers</span>\r\n                            <span><small className=\"count\">{state?state.following.length:\"0\"}</small>Following</span>\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"create_img_wrapper\">\r\n                  <CreatePost />\r\n              </div>\r\n              <div className=\"user_gallery\">\r\n              <div className=\"user_header\">\r\n                  <h4>Posts</h4>\r\n              </div>\r\n              <div className=\"gallery_wrapper\">\r\n                        {\r\n                            mypics.map(item=>{\r\n                                return(\r\n                                    <img key={item._id} src={item.photo} alt={item.title} />\r\n                                )\r\n                            })\r\n                        }\r\n              </div>\r\n                </div>\r\n          </div>\r\n      </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\Home.js",["105","106","107","108","109"],"import React,{ useState, useEffect,useContext } from 'react'\r\nimport { UserContext } from '../App'\r\nimport './Home.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { AiOutlineLike, AiTwotoneLike  } from 'react-icons/ai';\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    \r\n      const [ data, setData ] = useState([])\r\n      const {state,dispatch} = useContext(UserContext)\r\n      useEffect(()=>{\r\n          fetch('/allpost',{\r\n              headers:{\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n              }\r\n          }).then(res=> res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n            setData(result.posts)\r\n          })\r\n      },[])\r\n\r\n      const likePost = (id) =>{\r\n          fetch('/like',{\r\n              method:'put',\r\n              headers:{\r\n                  'Content-Type':'application/json',\r\n                  \"Authorization\":'Bearer '+localStorage.getItem('jwt')\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=> res.json())\r\n          .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n      }\r\n      const dislikePost = (id) =>{\r\n        fetch('/dislike',{\r\n            method:'put',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                \"Authorization\":'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=> res.json())\r\n        .then(result=>{\r\n          const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n          })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n           })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n  }\r\n\r\n  const deletePost = (postid)=>{\r\n    fetch(`/deletepost/${postid}`,{\r\n        method:\"delete\",\r\n        headers:{\r\n            Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newData = data.filter(item=>{\r\n            return item._id !== result._id\r\n        })\r\n        setData(newData)\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"home_section\">\r\n            <div className=\"home_wrapper\">\r\n                {\r\n                    data.map(item=>{\r\n                        return(\r\n                            <div className=\"card_wrapper\">\r\n                            <div className=\"card_header_info\"  key={item._id}>\r\n                                <h4><Link className=\"user_name\" to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"} >{item.postedBy.name}</Link>\r\n                                <MdDelete className=\"delete-icon\" onClick={()=>deletePost(item._id)} style={{float: 'right' }} /></h4>\r\n                                \r\n                            </div>\r\n                            <div className=\"card_body\">\r\n                                <img src={item.photo} />\r\n                                    <div className=\"post_btns_info\">\r\n                                        {item.likes.includes(state._id)\r\n                                        ?\r\n                                        <Button variant=\"contained\" color=\"default\" className=\"like_btn\" ><AiTwotoneLike className=\"dislike_icon\"  onClick={() => {dislikePost(item._id)}} /></Button>\r\n                                        : <Button variant=\"contained\" color=\"default\" className=\"like_btn\"><AiOutlineLike  className=\"like_icon\" onClick={() => {likePost(item._id)}} /></Button> }\r\n                                    </div>\r\n                                <p >{item.likes.length} Likes</p>\r\n                                <div className=\"post_text_info\">\r\n                                    <p>{item.body}</p>\r\n                                    {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <p className=\"comments\"  key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</p>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"Write a comment here.....\" />  \r\n                                </form>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                       \r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n  ","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\CreatePost.js",["110","111"],"import React,{ useState, useEffect } from 'react'\r\nimport './CreatePost.css'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport { GrFormAdd } from 'react-icons/gr'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nconst  CreatePost = () =>{\r\n\r\n    let history = useHistory()\r\n    const [ body, setBody ] = useState('')\r\n    const [ image, setImage ] = useState('')\r\n    const [url, setUrl] = useState('')\r\n    const [ selectedImage, setSelectedImage ] = useState([])\r\n\r\n    const imageChange = (e) =>{\r\n       if(e.target.files){\r\n           const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\r\n           console.log(fileArray)\r\n           setSelectedImage((prevImages)=>prevImages.concat(fileArray))\r\n           Array.from(e.target.files).map(\r\n               (file)=>URL.revokeObjectURL(file)\r\n           )}\r\n    }\r\n\r\n    const renderImage = (source) =>{\r\n        return source.map((photo)=>{\r\n            return <img src={photo} key={photo} />\r\n        })\r\n    }\r\n\r\n    const changeImages = (e) =>{\r\n        setImage(e.target.files[0])\r\n        imageChange(e)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(url){\r\n        fetch('/createpost',{\r\n            method:'post',\r\n            headers:{\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n            //  title,\r\n             body,\r\n             pic:url\r\n            })\r\n          }).then(res=>res.json())\r\n          .then(data=>{\r\n      \r\n             if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n             }\r\n             else{\r\n                 M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n                 history.push('/')\r\n             }\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n      }\r\n      },[url])\r\n \r\n    const postDetails = () =>{\r\n        const data = new FormData()\r\n        data.append('file',image)\r\n        data.append('upload_preset','pixelphant_social_media')\r\n        data.append('cloud_name','grow-more')\r\n        fetch('https://api.cloudinary.com/v1_1/grow-more/image/upload',{\r\n            method:'post',\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n \r\n    return(\r\n        <div className=\"createpost_section\">\r\n        <div className=\"cratepost_wrapper\">\r\n        <div className=\"create_post\">\r\n            <h4>Create Post</h4>\r\n        </div>\r\n                <div className=\"post_block\">\r\n                  <div className=\"add_photo\">\r\n                      <div className=\"add_photo_block\">\r\n                        <div className=\"add_photo_card\">\r\n                        <div className=\"img_block\" >{renderImage(selectedImage)}\r\n                        <input type=\"file\" id=\"images\"  onChange={(e) => changeImages(e)}    />\r\n                        <label htmlFor=\"images\"><span><small className=\"btn-floating btn-large waves-effect waves-light\"><GrFormAdd /></small>Add Photo</span></label>\r\n                        </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"add_content\">\r\n                      <TextareaAutosize rows=\"4\"  aria-label=\"textarea\" value={body} onChange={(e) => setBody(e.target.value) } placeholder=\"Let the world know what you're thinking\" />;\r\n                      <button  className=\"post_btn\" onClick={() => postDetails()}>Post</button>\r\n                  </div>\r\n                </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CreatePost","D:\\Node-project\\Pixelphant_social_media\\server\\client\\src\\components\\PostImg.js",["112"],"import React, { useState } from \"react\";\r\n\r\nconst PostImg = () => {\r\n\r\n const [ selectedImage, setSelectedImage ] = useState([])\r\n\r\n const imageChange = (e) =>{\r\n    if(e.target.files){\r\n        const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\r\n        console.log(fileArray)\r\n        setSelectedImage((prevImages)=>prevImages.concat(fileArray))\r\n        Array.from(e.target.files).map(\r\n            (file)=>URL.revokeObjectURL(file)\r\n        )}\r\n }\r\n\r\n const renderImage = (source) =>{\r\n    return source.map((photo)=>{\r\n        return <img src={photo} key={photo} />\r\n    })\r\n}\r\n    return(\r\n        <div>\r\n            <input type=\"file\" multiple id=\"images\" onChange={imageChange} />\r\n            { renderImage(selectedImage) }\r\n            <label htmlFor=\"images\">add </label>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostImg; ",{"ruleId":"113","severity":1,"message":"114","line":21,"column":11,"nodeType":"115","messageId":"116","endLine":21,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":31,"column":5,"nodeType":"119","endLine":31,"endColumn":7,"suggestions":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"113","severity":1,"message":"125","line":13,"column":17,"nodeType":"115","messageId":"116","endLine":13,"endColumn":25},{"ruleId":"113","severity":1,"message":"126","line":14,"column":22,"nodeType":"115","messageId":"116","endLine":14,"endColumn":35},{"ruleId":"117","severity":1,"message":"127","line":21,"column":5,"nodeType":"119","endLine":21,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":58,"column":19,"nodeType":"131","messageId":"132","endLine":58,"endColumn":20,"suggestions":"133"},{"ruleId":"129","severity":1,"message":"130","line":58,"column":44,"nodeType":"131","messageId":"132","endLine":58,"endColumn":45,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":89,"column":13,"nodeType":"137","messageId":"138","endLine":89,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":105,"column":17,"nodeType":"141","endLine":105,"endColumn":35},{"ruleId":"117","severity":1,"message":"142","line":25,"column":8,"nodeType":"119","endLine":25,"endColumn":10,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":71,"column":80,"nodeType":"146","messageId":"147","endLine":71,"endColumn":82},{"ruleId":"139","severity":1,"message":"140","line":91,"column":18,"nodeType":"141","endLine":91,"endColumn":54},{"ruleId":"139","severity":1,"message":"140","line":93,"column":23,"nodeType":"141","endLine":93,"endColumn":57},{"ruleId":"121","replacedBy":"148"},{"ruleId":"123","replacedBy":"149"},{"ruleId":"144","severity":1,"message":"150","line":4,"column":19,"nodeType":"146","messageId":"147","endLine":4,"endColumn":21},{"ruleId":"144","severity":1,"message":"150","line":7,"column":19,"nodeType":"146","messageId":"147","endLine":7,"endColumn":21},{"ruleId":"144","severity":1,"message":"150","line":10,"column":19,"nodeType":"146","messageId":"147","endLine":10,"endColumn":21},{"ruleId":"144","severity":1,"message":"150","line":17,"column":19,"nodeType":"146","messageId":"147","endLine":17,"endColumn":21},{"ruleId":"144","severity":1,"message":"150","line":23,"column":19,"nodeType":"146","messageId":"147","endLine":23,"endColumn":21},{"ruleId":"113","severity":1,"message":"151","line":11,"column":20,"nodeType":"115","messageId":"116","endLine":11,"endColumn":28},{"ruleId":"144","severity":1,"message":"150","line":37,"column":28,"nodeType":"146","messageId":"147","endLine":37,"endColumn":30},{"ruleId":"144","severity":1,"message":"150","line":61,"column":26,"nodeType":"146","messageId":"147","endLine":61,"endColumn":28},{"ruleId":"144","severity":1,"message":"150","line":88,"column":26,"nodeType":"146","messageId":"147","endLine":88,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":127,"column":33,"nodeType":"141","endLine":127,"endColumn":57},{"ruleId":"113","severity":1,"message":"114","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":15,"column":19,"nodeType":"131","messageId":"132","endLine":15,"endColumn":20,"suggestions":"152"},{"ruleId":"129","severity":1,"message":"130","line":15,"column":44,"nodeType":"131","messageId":"132","endLine":15,"endColumn":45,"suggestions":"153"},{"ruleId":"139","severity":1,"message":"140","line":61,"column":17,"nodeType":"141","endLine":61,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":53,"column":21,"nodeType":"141","endLine":53,"endColumn":39},{"ruleId":"121","replacedBy":"154"},{"ruleId":"123","replacedBy":"155"},{"ruleId":"113","severity":1,"message":"156","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"157","line":15,"column":12,"nodeType":"115","messageId":"116","endLine":15,"endColumn":15},{"ruleId":"113","severity":1,"message":"158","line":15,"column":17,"nodeType":"115","messageId":"116","endLine":15,"endColumn":23},{"ruleId":"117","severity":1,"message":"159","line":61,"column":7,"nodeType":"119","endLine":61,"endColumn":19,"suggestions":"160"},{"ruleId":"117","severity":1,"message":"159","line":96,"column":11,"nodeType":"119","endLine":96,"endColumn":18,"suggestions":"161"},{"ruleId":"139","severity":1,"message":"140","line":109,"column":17,"nodeType":"141","endLine":109,"endColumn":58},{"ruleId":"139","severity":1,"message":"140","line":118,"column":25,"nodeType":"141","endLine":118,"endColumn":64},{"ruleId":"113","severity":1,"message":"151","line":13,"column":20,"nodeType":"115","messageId":"116","endLine":13,"endColumn":28},{"ruleId":"144","severity":1,"message":"150","line":39,"column":28,"nodeType":"146","messageId":"147","endLine":39,"endColumn":30},{"ruleId":"144","severity":1,"message":"150","line":63,"column":26,"nodeType":"146","messageId":"147","endLine":63,"endColumn":28},{"ruleId":"144","severity":1,"message":"150","line":90,"column":26,"nodeType":"146","messageId":"147","endLine":90,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":132,"column":33,"nodeType":"141","endLine":132,"endColumn":57},{"ruleId":"139","severity":1,"message":"140","line":30,"column":20,"nodeType":"141","endLine":30,"endColumn":51},{"ruleId":"117","severity":1,"message":"162","line":66,"column":9,"nodeType":"119","endLine":66,"endColumn":14,"suggestions":"163"},{"ruleId":"139","severity":1,"message":"140","line":19,"column":16,"nodeType":"141","endLine":19,"endColumn":47},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["164"],"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'setImage' is assigned a value but never used.","'setBackground' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["167"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["168","169"],["170","171"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["172"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["165"],["166"],"Expected '===' and instead saw '=='.","'dispatch' is assigned a value but never used.",["173","174"],["175","176"],["165"],["166"],"'Button' is defined but never used.","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["177"],["178"],"React Hook useEffect has missing dependencies: 'body' and 'history'. Either include them or remove the dependency array.",["179"],{"desc":"180","fix":"181"},"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"messageId":"184","fix":"185","desc":"186"},{"messageId":"187","fix":"188","desc":"189"},{"messageId":"184","fix":"190","desc":"186"},{"messageId":"187","fix":"191","desc":"189"},{"desc":"192","fix":"193"},{"messageId":"184","fix":"194","desc":"186"},{"messageId":"187","fix":"195","desc":"189"},{"messageId":"184","fix":"196","desc":"186"},{"messageId":"187","fix":"197","desc":"189"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [dispatch, history]",{"range":"204","text":"205"},"Update the dependencies array to be: [uploadFields, url]",{"range":"206","text":"207"},"removeEscape",{"range":"208","text":"209"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"210","text":"211"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"212","text":"209"},{"range":"213","text":"211"},"Update the dependencies array to be: [userid]",{"range":"214","text":"215"},{"range":"216","text":"209"},{"range":"217","text":"211"},{"range":"218","text":"209"},{"range":"219","text":"211"},"Update the dependencies array to be: [background, dispatch, state]",{"range":"220","text":"221"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"222","text":"223"},"Update the dependencies array to be: [body, history, url]",{"range":"224","text":"225"},[1063,1065],"[dispatch, history]",[599,604],"[uploadFields, url]",[1574,1575],"",[1574,1574],"\\",[1599,1600],[1599,1599],[880,882],"[userid]",[479,480],[479,479],[504,505],[504,504],[2163,2175],"[background, dispatch, state]",[3455,3462],"[dispatch, image, state]",[2058,2063],"[body, history, url]"]